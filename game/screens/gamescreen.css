.game.screen > .layer {
	position: absolute;
	left: 0%;
	top: 0%;
	width: 100%;
	height: 100%;
	isolation: isolate;
	pointer-events: none;
	touch-action: none;
}

#btn_menu {
	color: var(--button-color);
	background: var(--button-background);
	
	position: absolute;
	left: 1rem;
	top: 1rem;
	width: 48px;
	height: 48px;
	border: none;
	display: grid;
	padding: 14px 8px 14px 8px;
	border-radius: 3px;
}

#btn_menu:after {
	--lw: 4px;
	--hlw: calc(var(--lw) / 2);
	
	content: "";
	display: block;
	
	background-image: linear-gradient(to bottom, white 0px, white var(--lw), transparent var(--lw), transparent calc(50% - var(--hlw)), white calc(50%  - var(--hlw)), white calc(50% + var(--hlw)), transparent calc(50% + 2px), transparent calc(100% - 4px), white calc(100% - 4px), white);
}

#btn_auto {
	color: var(--button-color);
	background: var(--button-background);	
	
	position: absolute;
	right: 1rem;
	top: 1rem;
	width: 48px;
	height: 48px;
	border: none;
	border-radius: 3px;
}

#btn_skip {
	color: var(--button-color);
	background: var(--button-background);
	
	position: absolute;
	right: calc(48px + 1.5rem);
	top: 1rem;
	width: 48px;
	height: 48px;
	border: none;
	border-radius: 3px;
}

#btn_menu:hover,
#btn_auto:hover,
#btn_skip:hover {
	color: var(--button-hover-color);
	background: var(--button-hover-background);
}

#btn_auto[aria-checked="true"],
#btn_skip[aria-checked="true"] {
	color: var(--button-toggle-color);
	background: var(--button-toggle-background);
}

/**
 * Bottom layer
 */
.game.screen > .bottom.layer :where(.background) {
	position: absolute;
	width: 100%;
	height: 100%;
	object-fit: cover;
}

.game.screen > .bottom.layer .background:where(.visible) {
	animation: fade-in 500ms ease-in;
}

.game.screen > .bottom.layer .background:not(:where(.visible)) {
	opacity: 0;
}

.game.screen > .bottom.layer .background > :where(img) {
	display: block;
	width: 100%;
	height: 100%;
	object-fit: cover;
}

.game.screen > .bottom.layer .background > :where(video) {
	display: block;
	width: 100%;
	height: 100%;
	object-fit: cover;
}

/**
 * Dialogue Layer
 */
.game.screen > :where(.dialogue.layer) {
}

.game.screen > .dialogue.layer :where(.dialogue-box),
.game.screen > .dialogue.layer :where(.dialogue-prompt) {
	position: absolute;
	left: 0px;
	bottom: 0px;
	width: 100%;
	height: 20vh;
	
	color: var(--dialogue-box-color);
	background: var(--dialogue-box-background);	
	
	opacity: 0;
	transition: opacity 250ms ease-in-out;
	
	padding: var(--dialogue-box-padding);
	box-sizing: border-box;
}

.game.screen > .dialogue.layer .dialogue-box:where(.visible),
.game.screen > .dialogue.layer .dialogue-prompt:where(.visible) {
	opacity: 1;
}

.game.screen > .dialogue.layer .dialogue-box:not(:where(.visible)),
.game.screen > .dialogue.layer .dialogue-prompt:not(:where(.visible)) {
	opacity: 0;
}

.game.screen > .dialogue.layer .dialogue-box :where(.who, .what),
.game.screen > .dialogue.layer .dialogue-prompt :where(.query, .input) {
	padding: 0;
	margin: 0;
	
	font-family: inherit;
	font-size: inherit;
}

.game.screen > .dialogue.layer .dialogue-prompt :where(.input) {
	width: 100%;
	
	background: transparent;
	color: inherit;
	
	border: none;
	outline: none;
	
	pointer-events: auto;
	touch-action: auto;
}

.game.screen > .dialogue.layer :where(.dialogue-menu) {
	position: absolute;
	width: 100%;
	height: 100%;
	
	opacity: 0;
	transition: opacity 250ms ease-in-out;
	
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	gap: var(--dialogue-menu-gap);
}

.game.screen > .dialogue.layer .dialogue-menu:where(.visible) {
	opacity: 1;
}

.game.screen > .dialogue.layer .dialogue-menu:not(:where(.visible)) {
	opacity: 0;
}

.game.screen > .dialogue.layer .dialogue-menu .item {
	pointer-events: auto;
	touch-action: auto;
}

.game.screen > .dialogue.layer .dialogue-menu :where(.item) {
	color: var(--dialogue-menu-item-color);
	background: var(--dialogue-menu-item-background);
	
	font-family: inherit;
	font-size: inherit;
	font-weight: inherit;
	font-style: inherit;
	
	border: var(--dialogue-menu-item-border);
	outline: none;
	padding: var(--dialogue-menu-item-padding);
	
	width: var(--dialogue-menu-item-width);
}

.game.screen > .dialogue.layer .dialogue-menu :where(.item:hover),
.game.screen > .dialogue.layer .dialogue-menu :where(.item:focus) {
	color: var(--dialogue-menu-item-hover-color);
	background-color: var(--dialogue-menu-item-hover-background);
}

/**
 * Character layer
 */
:where(.character.layer) {
	display: grid;
}

.game.screen > .character.layer.columns-2 {
	grid-template-columns: repeat(6, minmax(0, 1fr));
	width: 300%;
	left: -100%;
}

.game.screen > .character.layer.columns-3 {
	grid-template-columns: repeat(9, minmax(0, 1fr));
	width: 300%;
	left: -100%;
}

.game.screen > .character.layer.columns-4 {
	grid-template-columns: repeat(12, minmax(0, 1fr));
	width: 300%;
	left: -100%;
}

.game.screen > .character.layer.columns-5 {
	grid-template-columns: repeat(15, minmax(0, 1fr));
	width: 300%;
	left: -100%;
}

.game.screen > .character.layer.columns-6 {
	grid-template-columns: repeat(18, minmax(0, 1fr));
	width: 300%;
	left: -100%;
}

.game.screen > .character.layer.columns-2 > .column-1 {
	grid-column: 3 !important;
}

.game.screen > .character.layer.columns-2 > .column-2 {
	grid-column: 4 !important;
}

.game.screen > .character.layer.columns-3 > .column-1 {
	grid-column: 4 !important;
}

.game.screen > .character.layer.columns-3 > .column-2 {
	grid-column: 5 !important;
}

.game.screen > .character.layer.columns-3 > .column-3 {
	grid-column: 6 !important;
}

.game.screen > .character.layer.columns-4 > .column-1 {
	grid-column: 5 !important;
}

.game.screen > .character.layer.columns-4 > .column-2 {
	grid-column: 6 !important;
}

.game.screen > .character.layer.columns-4 > .column-3 {
	grid-column: 7 !important;
}

.game.screen > .character.layer.columns-4 > .column-4 {
	grid-column: 8 !important;
}

.game.screen > .character.layer.columns-5 > .column-1 {
	grid-column: 6 !important;
}

.game.screen > .character.layer.columns-5 > .column-2 {
	grid-column: 7 !important;
}

.game.screen > .character.layer.columns-5 > .column-3 {
	grid-column: 8 !important;
}

.game.screen > .character.layer.columns-5 > .column-4 {
	grid-column: 9 !important;
}

.game.screen > .character.layer.columns-5 > .column-5 {
	grid-column: 10 !important;
}

.game.screen > .character.layer.columns-6 > .column-1 {
	grid-column: 7 !important;
}

.game.screen > .character.layer.columns-6 > .column-2 {
	grid-column: 8 !important;
}

.game.screen > .character.layer.columns-6 > .column-3 {
	grid-column: 9 !important;
}

.game.screen > .character.layer.columns-6 > .column-4 {
	grid-column: 10 !important;
}

.game.screen > .character.layer.columns-6 > .column-5 {
	grid-column: 11 !important;
}

.game.screen > .character.layer.columns-6 > .column-6 {
	grid-column: 12 !important;
}

.game.screen > .character.layer > :where(.character) {
	width: auto;
	height: 100%;
	aspect-ratio: 9 / 16;
	background-size: contain;
	background-repeat: no-repeat;
	background-position: left bottom;

	transition: margin 250ms linear;

}

.game.screen > .character.layer > .character:where(.visible) {
	opacity: 1;
}

.game.screen > .character.layer > .character:not(:where(.visible)) {
	opacity: 0;
}

.game.screen > .character.layer > .character:where(.focus) {
	filter: reset;
	z-index: 100;
}

.game.screen > .character.layer > .character:not(:where(.focus)) {
	filter: grayscale(50%);
}

/**
 * UI layer
 **/
.game.screen > .ui.layer * {
	 pointer-events: auto;
	 touch-action: auto;
}

/**
 * Top layer
 */
.game.screen > .top.layer > :where(.heading) {
	position: absolute;
	width: 100%;
	height: 100%;
	background: black;
	color: white;
	font-size: 3rem;
	display: grid;
	place-content: center;
	transition: opacity 250ms ease-in-out;
}

.game.screen > .top.layer > .heading:where(.visible) {
	opacity: 1;
}

.game.screen > .top.layer > .heading:not(:where(.visible)) {
	opacity: 0;
}